[
  {
    "id": "MOTION_MOVESTEPS",
    "selector": "forward:",
    "spec": "move %1 steps",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "motion"
  },
  {
    "id": "MOTION_TURNRIGHT",
    "selector": "turnRight:",
    "spec": "turn @turnRight %1 degrees",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "motion"
  },
  {
    "id": "MOTION_TURNLEFT",
    "selector": "turnLeft:",
    "spec": "turn @turnLeft %1 degrees",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "motion"
  },
  {
    "id": "MOTION_POINTINDIRECTION",
    "selector": "heading:",
    "spec": "point in direction %1",
    "inputs": [
      "%d.direction"
    ],
    "shape": "stack",
    "category": "motion"
  },
  {
    "id": "MOTION_POINTTOWARDS",
    "selector": "pointTowards:",
    "spec": "point towards %1",
    "inputs": [
      "%m.spriteOrMouse"
    ],
    "shape": "stack",
    "category": "motion"
  },
  {
    "id": "MOTION_GOTOXY",
    "selector": "gotoX:y:",
    "spec": "go to x:%1 y:%2",
    "inputs": [
      "%n",
      "%n"
    ],
    "shape": "stack",
    "category": "motion"
  },
  {
    "id": "MOTION_GOTO",
    "selector": "gotoSpriteOrMouse:",
    "spec": "go to %1",
    "inputs": [
      "%m.location"
    ],
    "shape": "stack",
    "category": "motion"
  },
  {
    "id": "MOTION_GLIDESECSTOXY",
    "selector": "glideSecs:toX:y:elapsed:from:",
    "spec": "glide %1 secs to x:%2 y:%3",
    "inputs": [
      "%n",
      "%n",
      "%n"
    ],
    "shape": "stack",
    "category": "motion"
  },
  {
    "id": "MOTION_GLIDETO",
    "spec": "glide %1 secs to %2",
    "inputs": [
      "%n",
      "%m.location"
    ],
    "shape": "stack",
    "category": "motion"
  },
  {
    "id": "MOTION_CHANGEXBY",
    "selector": "changeXposBy:",
    "spec": "change x by %1",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "motion"
  },
  {
    "id": "MOTION_SETX",
    "selector": "xpos:",
    "spec": "set x to %1",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "motion"
  },
  {
    "id": "MOTION_CHANGEYBY",
    "selector": "changeYposBy:",
    "spec": "change y by %1",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "motion"
  },
  {
    "id": "MOTION_SETY",
    "selector": "ypos:",
    "spec": "set y to %1",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "motion"
  },
  {
    "id": "MOTION_SETROTATIONSTYLE",
    "selector": "setRotationStyle",
    "spec": "set rotation style %1",
    "inputs": [
      "%m.rotationStyle"
    ],
    "shape": "stack",
    "category": "motion"
  },
  {
    "id": "LOOKS_SAYFORSECS",
    "selector": "say:duration:elapsed:from:",
    "spec": "say %1 for %2 seconds",
    "inputs": [
      "%s",
      "%n"
    ],
    "shape": "stack",
    "category": "looks"
  },
  {
    "id": "LOOKS_SAY",
    "selector": "say:",
    "spec": "say %1",
    "inputs": [
      "%s"
    ],
    "shape": "stack",
    "category": "looks"
  },
  {
    "id": "LOOKS_THINKFORSECS",
    "selector": "think:duration:elapsed:from:",
    "spec": "think %1 for %2 seconds",
    "inputs": [
      "%s",
      "%n"
    ],
    "shape": "stack",
    "category": "looks"
  },
  {
    "id": "LOOKS_THINK",
    "selector": "think:",
    "spec": "think %1",
    "inputs": [
      "%s"
    ],
    "shape": "stack",
    "category": "looks"
  },
  {
    "id": "LOOKS_SHOW",
    "selector": "show",
    "spec": "show",
    "inputs": [],
    "shape": "stack",
    "category": "looks"
  },
  {
    "id": "LOOKS_HIDE",
    "selector": "hide",
    "spec": "hide",
    "inputs": [],
    "shape": "stack",
    "category": "looks"
  },
  {
    "id": "LOOKS_SWITCHCOSTUMETO",
    "selector": "lookLike:",
    "spec": "switch costume to %1",
    "inputs": [
      "%m.costume"
    ],
    "shape": "stack",
    "category": "looks"
  },
  {
    "id": "LOOKS_NEXTCOSTUME",
    "selector": "nextCostume",
    "spec": "next costume",
    "inputs": [],
    "shape": "stack",
    "category": "looks"
  },
  {
    "id": "LOOKS_NEXTBACKDROP_BLOCK",
    "selector": "nextScene",
    "spec": "next backdrop",
    "inputs": [],
    "shape": "stack",
    "category": "looks"
  },
  {
    "id": "LOOKS_SWITCHBACKDROPTO",
    "selector": "startScene",
    "spec": "switch backdrop to %1",
    "inputs": [
      "%m.backdrop"
    ],
    "shape": "stack",
    "category": "looks"
  },
  {
    "id": "LOOKS_SWITCHBACKDROPTOANDWAIT",
    "selector": "startSceneAndWait",
    "spec": "switch backdrop to %1 and wait",
    "inputs": [
      "%m.backdrop"
    ],
    "shape": "stack",
    "category": "looks"
  },
  {
    "id": "LOOKS_CHANGEEFFECTBY",
    "selector": "changeGraphicEffect:by:",
    "spec": "change %1 effect by %2",
    "inputs": [
      "%m.effect",
      "%n"
    ],
    "shape": "stack",
    "category": "looks"
  },
  {
    "id": "LOOKS_SETEFFECTTO",
    "selector": "setGraphicEffect:to:",
    "spec": "set %1 effect to %2",
    "inputs": [
      "%m.effect",
      "%n"
    ],
    "shape": "stack",
    "category": "looks"
  },
  {
    "id": "LOOKS_CLEARGRAPHICEFFECTS",
    "selector": "filterReset",
    "spec": "clear graphic effects",
    "inputs": [],
    "shape": "stack",
    "category": "looks"
  },
  {
    "id": "LOOKS_CHANGESIZEBY",
    "selector": "changeSizeBy:",
    "spec": "change size by %1",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "looks"
  },
  {
    "id": "LOOKS_SETSIZETO",
    "selector": "setSizeTo:",
    "spec": "set size to %1%",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "looks"
  },
  {
    "selector": "comeToFront",
    "spec": "go to front",
    "inputs": [],
    "shape": "stack",
    "category": "looks"
  },
  {
    "id": "LOOKS_GOTOFRONTBACK",
    "spec": "go to %1 layer",
    "inputs": [
      "%m"
    ],
    "shape": "stack",
    "category": "looks"
  },
  {
    "selector": "goBackByLayers:",
    "spec": "go back %1 layers",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "looks"
  },
  {
    "id": "LOOKS_GOFORWARDBACKWARDLAYERS",
    "spec": "go %1 %2 layers",
    "inputs": [
      "%m",
      "%n"
    ],
    "shape": "stack",
    "category": "looks"
  },
  {
    "id": "SOUND_PLAY",
    "selector": "playSound:",
    "spec": "start sound %1",
    "inputs": [
      "%m.sound"
    ],
    "shape": "stack",
    "category": "sound"
  },
  {
    "id": "SOUND_CHANGEEFFECTBY",
    "spec": "change %1 effect by %2",
    "inputs": [
      "%m",
      "%n"
    ],
    "shape": "stack",
    "category": "sound"
  },
  {
    "id": "SOUND_SETEFFECTO",
    "spec": "set %1 effect to %2",
    "inputs": [
      "%m",
      "%n"
    ],
    "shape": "stack",
    "category": "sound"
  },
  {
    "id": "SOUND_CLEAREFFECTS",
    "spec": "clear sound effects",
    "inputs": [],
    "shape": "stack",
    "category": "sound"
  },
  {
    "id": "SOUND_PLAYUNTILDONE",
    "selector": "doPlaySoundAndWait",
    "spec": "play sound %1 until done",
    "inputs": [
      "%m.sound"
    ],
    "shape": "stack",
    "category": "sound"
  },
  {
    "id": "SOUND_STOPALLSOUNDS",
    "selector": "stopAllSounds",
    "spec": "stop all sounds",
    "inputs": [],
    "shape": "stack",
    "category": "sound"
  },
  {
    "id": "music.playDrumForBeats",
    "selector": "playDrum",
    "spec": "play drum %1 for %2 beats",
    "inputs": [
      "%d.drum",
      "%n"
    ],
    "shape": "stack",
    "category": "music"
  },
  {
    "id": "music.restForBeats",
    "selector": "rest:elapsed:from:",
    "spec": "rest for %1 beats",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "music"
  },
  {
    "id": "music.playNoteForBeats",
    "selector": "noteOn:duration:elapsed:from:",
    "spec": "play note %1 for %2 beats",
    "inputs": [
      "%d.note",
      "%n"
    ],
    "shape": "stack",
    "category": "music"
  },
  {
    "id": "music.setInstrument",
    "selector": "instrument:",
    "spec": "set instrument to %1",
    "inputs": [
      "%d.instrument"
    ],
    "shape": "stack",
    "category": "music"
  },
  {
    "id": "SOUND_CHANGEVOLUMEBY",
    "selector": "changeVolumeBy:",
    "spec": "change volume by %1",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "sound"
  },
  {
    "id": "SOUND_SETVOLUMETO",
    "selector": "setVolumeTo:",
    "spec": "set volume to %1%",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "sound"
  },
  {
    "id": "music.changeTempo",
    "selector": "changeTempoBy:",
    "spec": "change tempo by %1",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "music"
  },
  {
    "selector": "setTempoTo:",
    "spec": "set tempo to %1 bpm",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "sound"
  },
  {
    "id": "music.setTempo",
    "selector": "setTempoTo:",
    "spec": "set tempo to %1",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "music"
  },
  {
    "id": "pen.clear",
    "selector": "clearPenTrails",
    "spec": "erase all",
    "inputs": [],
    "shape": "stack",
    "category": "pen"
  },
  {
    "id": "pen.stamp",
    "selector": "stampCostume",
    "spec": "stamp",
    "inputs": [],
    "shape": "stack",
    "category": "pen"
  },
  {
    "id": "pen.penDown",
    "selector": "putPenDown",
    "spec": "pen down",
    "inputs": [],
    "shape": "stack",
    "category": "pen"
  },
  {
    "id": "pen.penUp",
    "selector": "putPenUp",
    "spec": "pen up",
    "inputs": [],
    "shape": "stack",
    "category": "pen"
  },
  {
    "id": "pen.setColor",
    "selector": "penColor:",
    "spec": "set pen color to %1",
    "inputs": [
      "%c"
    ],
    "shape": "stack",
    "category": "pen"
  },
  {
    "id": "pen.changeHue",
    "selector": "changePenHueBy:",
    "spec": "change pen color by %1",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "pen"
  },
  {
    "id": "pen.setColorParam",
    "spec": "set pen %1 to %2",
    "inputs": [
      "%m.color",
      "%c"
    ],
    "shape": "stack",
    "category": "pen"
  },
  {
    "id": "pen.changeColorParam",
    "spec": "change pen %1 by %2",
    "inputs": [
      "%m.color",
      "%n"
    ],
    "shape": "stack",
    "category": "pen"
  },
  {
    "id": "pen.setHue",
    "selector": "setPenHueTo:",
    "spec": "set pen color to %1",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "pen"
  },
  {
    "id": "pen.changeShade",
    "selector": "changePenShadeBy:",
    "spec": "change pen shade by %1",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "pen"
  },
  {
    "id": "pen.setShade",
    "selector": "setPenShadeTo:",
    "spec": "set pen shade to %1",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "pen"
  },
  {
    "id": "pen.changeSize",
    "selector": "changePenSizeBy:",
    "spec": "change pen size by %1",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "pen"
  },
  {
    "id": "pen.setSize",
    "selector": "penSize:",
    "spec": "set pen size to %1",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "pen"
  },
  {
    "id": "EVENT_WHENFLAGCLICKED",
    "selector": "whenGreenFlag",
    "spec": "when @greenFlag clicked",
    "inputs": [],
    "shape": "hat",
    "category": "events"
  },
  {
    "id": "EVENT_WHENKEYPRESSED",
    "selector": "whenKeyPressed",
    "spec": "when %1 key pressed",
    "inputs": [
      "%m.key"
    ],
    "shape": "hat",
    "category": "events"
  },
  {
    "id": "EVENT_WHENTHISSPRITECLICKED",
    "selector": "whenClicked",
    "spec": "when this sprite clicked",
    "inputs": [],
    "shape": "hat",
    "category": "events"
  },
  {
    "id": "EVENT_WHENSTAGECLICKED",
    "spec": "when stage clicked",
    "inputs": [],
    "shape": "hat",
    "category": "events"
  },
  {
    "id": "EVENT_WHENBACKDROPSWITCHESTO",
    "selector": "whenSceneStarts",
    "spec": "when backdrop switches to %1",
    "inputs": [
      "%m.backdrop"
    ],
    "shape": "hat",
    "category": "events"
  },
  {
    "id": "EVENT_WHENGREATERTHAN",
    "selector": "whenSensorGreaterThan",
    "spec": "when %1 > %2",
    "inputs": [
      "%m.triggerSensor",
      "%n"
    ],
    "shape": "hat",
    "category": "events"
  },
  {
    "id": "EVENT_WHENBROADCASTRECEIVED",
    "selector": "whenIReceive",
    "spec": "when I receive %1",
    "inputs": [
      "%m.broadcast"
    ],
    "shape": "hat",
    "category": "events"
  },
  {
    "id": "EVENT_BROADCAST",
    "selector": "broadcast:",
    "spec": "broadcast %1",
    "inputs": [
      "%m.broadcast"
    ],
    "shape": "stack",
    "category": "events"
  },
  {
    "id": "EVENT_BROADCASTANDWAIT",
    "selector": "doBroadcastAndWait",
    "spec": "broadcast %1 and wait",
    "inputs": [
      "%m.broadcast"
    ],
    "shape": "stack",
    "category": "events"
  },
  {
    "id": "CONTROL_WAIT",
    "selector": "wait:elapsed:from:",
    "spec": "wait %1 seconds",
    "inputs": [
      "%n"
    ],
    "shape": "stack",
    "category": "control"
  },
  {
    "id": "CONTROL_REPEAT",
    "selector": "doRepeat",
    "spec": "repeat %1",
    "inputs": [
      "%n"
    ],
    "shape": "c-block",
    "category": "control",
    "hasLoopArrow": true
  },
  {
    "id": "CONTROL_FOREVER",
    "selector": "doForever",
    "spec": "forever",
    "inputs": [],
    "shape": "c-block cap",
    "category": "control",
    "hasLoopArrow": true
  },
  {
    "id": "CONTROL_IF",
    "selector": "doIf",
    "spec": "if %1 then",
    "inputs": [
      "%b"
    ],
    "shape": "c-block",
    "category": "control"
  },
  {
    "id": "CONTROL_WAITUNTIL",
    "selector": "doWaitUntil",
    "spec": "wait until %1",
    "inputs": [
      "%b"
    ],
    "shape": "stack",
    "category": "control"
  },
  {
    "id": "CONTROL_REPEATUNTIL",
    "selector": "doUntil",
    "spec": "repeat until %1",
    "inputs": [
      "%b"
    ],
    "shape": "c-block",
    "category": "control",
    "hasLoopArrow": true
  },
  {
    "id": "CONTROL_STOP",
    "selector": "stopScripts",
    "spec": "stop %1",
    "inputs": [
      "%m.stop"
    ],
    "shape": "cap",
    "category": "control"
  },
  {
    "id": "CONTROL_STARTASCLONE",
    "selector": "whenCloned",
    "spec": "when I start as a clone",
    "inputs": [],
    "shape": "hat",
    "category": "control"
  },
  {
    "id": "CONTROL_CREATECLONEOF",
    "selector": "createCloneOf",
    "spec": "create clone of %1",
    "inputs": [
      "%m.spriteOnly"
    ],
    "shape": "stack",
    "category": "control"
  },
  {
    "id": "CONTROL_DELETETHISCLONE",
    "selector": "deleteClone",
    "spec": "delete this clone",
    "inputs": [],
    "shape": "cap",
    "category": "control"
  },
  {
    "id": "SENSING_ASKANDWAIT",
    "selector": "doAsk",
    "spec": "ask %1 and wait",
    "inputs": [
      "%s"
    ],
    "shape": "stack",
    "category": "sensing"
  },
  {
    "id": "DATA_SETVARIABLETO",
    "selector": "setVar:to:",
    "spec": "set %1 to %2",
    "inputs": [
      "%m.var",
      "%s"
    ],
    "shape": "stack",
    "category": "variables"
  },
  {
    "id": "DATA_CHANGEVARIABLEBY",
    "selector": "changeVar:by:",
    "spec": "change %1 by %2",
    "inputs": [
      "%m.var",
      "%n"
    ],
    "shape": "stack",
    "category": "variables"
  },
  {
    "id": "DATA_SHOWVARIABLE",
    "selector": "showVariable:",
    "spec": "show variable %1",
    "inputs": [
      "%m.var"
    ],
    "shape": "stack",
    "category": "variables"
  },
  {
    "id": "DATA_HIDEVARIABLE",
    "selector": "hideVariable:",
    "spec": "hide variable %1",
    "inputs": [
      "%m.var"
    ],
    "shape": "stack",
    "category": "variables"
  },
  {
    "id": "DATA_ADDTOLIST",
    "selector": "append:toList:",
    "spec": "add %1 to %2",
    "inputs": [
      "%s",
      "%m.list"
    ],
    "shape": "stack",
    "category": "list"
  },
  {
    "id": "DATA_DELETEOFLIST",
    "selector": "deleteLine:ofList:",
    "spec": "delete %1 of %2",
    "inputs": [
      "%d.listDeleteItem",
      "%m.list"
    ],
    "shape": "stack",
    "category": "list"
  },
  {
    "id": "DATA_DELETEALLOFLIST",
    "spec": "delete all of %1",
    "inputs": [
      "%m.list"
    ],
    "shape": "stack",
    "category": "list"
  },
  {
    "id": "DATA_INSERTATLIST",
    "selector": "insert:at:ofList:",
    "spec": "insert %1 at %2 of %3",
    "inputs": [
      "%s",
      "%d.listItem",
      "%m.list"
    ],
    "shape": "stack",
    "category": "list"
  },
  {
    "id": "DATA_REPLACEITEMOFLIST",
    "selector": "setLine:ofList:to:",
    "spec": "replace item %1 of %2 with %3",
    "inputs": [
      "%d.listItem",
      "%m.list",
      "%s"
    ],
    "shape": "stack",
    "category": "list"
  },
  {
    "id": "DATA_SHOWLIST",
    "selector": "showList:",
    "spec": "show list %1",
    "inputs": [
      "%m.list"
    ],
    "shape": "stack",
    "category": "list"
  },
  {
    "id": "DATA_HIDELIST",
    "selector": "hideList:",
    "spec": "hide list %1",
    "inputs": [
      "%m.list"
    ],
    "shape": "stack",
    "category": "list"
  }
]
