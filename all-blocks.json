{
  "motion_movesteps": {
    "spec": "move {STEPS} steps"
  },
  "motion_turnright": {
    "spec": "turn {ICON} {DEGREES} degrees"
  },
  "motion_turnleft": {
    "spec": "turn {ICON} {DEGREES} degrees"
  },
  "motion_pointindirection": {
    "spec": "point in direction {DIRECTION}"
  },
  "motion_pointtowards": {
    "spec": "point towards {TOWARDS}"
  },
  "motion_gotoxy": {
    "spec": "go to "
  },
  "motion_goto": {
    "spec": "go to {TO}"
  },
  "motion_glidesecstoxy": {
    "spec": "glide {SECS} secs to "
  },
  "motion_glideto": {
    "spec": "glide {SECS} secs to {TO}"
  },
  "motion_changexby": {
    "spec": "change x by {DX}"
  },
  "motion_setx": {
    "spec": "set x to {X}"
  },
  "motion_changeyby": {
    "spec": "change y by {DY}"
  },
  "motion_sety": {
    "spec": "set y to {Y}"
  },
  "motion_ifonedgebounce": {
    "spec": "if on edge, bounce"
  },
  "motion_setrotationstyle": {
    "spec": "left-right"
  },
  "motion_xposition": {
    "spec": "x position"
  },
  "motion_yposition": {
    "spec": "y position"
  },
  "motion_direction": {
    "spec": "direction"
  },
  "looks_sayforsecs": {
    "spec": "say {MESSAGE} for {SECS} seconds"
  },
  "looks_say": {
    "spec": "say {MESSAGE}"
  },
  "looks_thinkforsecs": {
    "spec": "think {MESSAGE} for {SECS} seconds"
  },
  "looks_think": {
    "spec": "think {MESSAGE}"
  },
  "looks_show": {
    "spec": "show"
  },
  "looks_hide": {
    "spec": "hide"
  },
  "looks_changeeffectby": {
    "spec": "change {EFFECT} effect by {CHANGE}"
  },
  "looks_seteffectto": {
    "spec": "set {EFFECT} effect to {VALUE}"
  },
  "looks_cleargraphiceffects": {
    "spec": "clear graphic effects"
  },
  "looks_changesizeby": {
    "spec": "change size by {CHANGE}"
  },
  "looks_setsizeto": {
    "spec": "set size to {SIZE} %"
  },
  "looks_size": {
    "spec": "size"
  },
  "looks_switchcostumeto": {
    "spec": "switch costume to {COSTUME}"
  },
  "looks_nextcostume": {
    "spec": "next costume"
  },
  "looks_switchbackdropto": {
    "spec": "switch backdrop to {BACKDROP}"
  },
  "looks_gotofrontback": {
    "spec": "go to {FRONT_BACK} layer"
  },
  "looks_goforwardbackwardlayers": {
    "spec": "go {FORWARD_BACKWARD} {NUM} layers"
  },
  "looks_backdropnumbername": {
    "spec": "backdrop {NUMBER_NAME}"
  },
  "looks_costumenumbername": {
    "spec": "costume {NUMBER_NAME}"
  },
  "looks_switchbackdroptoandwait": {
    "spec": "switch backdrop to {BACKDROP} and wait"
  },
  "looks_nextbackdrop": {
    "spec": "next backdrop"
  },
  "sound_play": {
    "spec": "start sound {SOUND_MENU}"
  },
  "sound_playuntildone": {
    "spec": "play sound {SOUND_MENU} until done"
  },
  "sound_stopallsounds": {
    "spec": "stop all sounds"
  },
  "sound_seteffectto": {
    "spec": "set {EFFECT} effect to {VALUE}"
  },
  "sound_changeeffectby": {
    "spec": "change {EFFECT} effect by {VALUE}"
  },
  "sound_cleareffects": {
    "spec": "clear sound effects"
  },
  "sound_changevolumeby": {
    "spec": "change volume by {VOLUME}"
  },
  "sound_setvolumeto": {
    "spec": "set volume to {VOLUME} %"
  },
  "sound_volume": {
    "spec": "volume"
  },
  "event_whenflagclicked": {
    "spec": "when {ICON} clicked"
  },
  "event_whenthisspriteclicked": {
    "spec": "when this sprite clicked"
  },
  "event_whenstageclicked": {
    "spec": "when stage clicked"
  },
  "event_whenbroadcastreceived": {
    "spec": "when I receive {BROADCAST_OPTION}"
  },
  "event_whenbackdropswitchesto": {
    "spec": "when backdrop switches to {BACKDROP}"
  },
  "event_whengreaterthan": {
    "spec": "when {WHENGREATERTHANMENU} > {VALUE}"
  },
  "event_broadcast": {
    "spec": "broadcast {BROADCAST_INPUT}"
  },
  "event_broadcastandwait": {
    "spec": "broadcast {BROADCAST_INPUT} and wait"
  },
  "event_whenkeypressed": {
    "spec": "when {KEY_OPTION} key pressed"
  },
  "control_forever": {
    "spec": "forever"
  },
  "control_repeat": {
    "spec": "repeat {TIMES}"
  },
  "control_if": {
    "spec": "if {CONDITION} then"
  },
  "control_if_else": {
    "spec": "if {CONDITION} then"
  },
  "control_else": {
    "spec": "else"
  },
  "control_stop": {
    "spec": "stop {STOP_OPTION}"
  },
  "control_wait": {
    "spec": "wait for {DURATION} seconds"
  },
  "control_wait_until": {
    "spec": "wait until {CONDITION}"
  },
  "control_repeat_until": {
    "spec": "repeat until {CONDITION}"
  },
  "control_start_as_clone": {
    "spec": "when I start as a clone"
  },
  "control_create_clone_of": {
    "spec": "create clone of {CLONE_OPTION}"
  },
  "control_delete_this_clone": {
    "spec": "delete this clone"
  },
  "sensing_touchingobject": {
    "spec": "touching {TOUCHINGOBJECTMENU} ?"
  },
  "sensing_touchingcolor": {
    "spec": "touching color {COLOR} ?"
  },
  "sensing_coloristouchingcolor": {
    "spec": "color {COLOR} is touching {COLOR2} ?"
  },
  "sensing_distanceto": {
    "spec": "distance to {DISTANCETOMENU}"
  },
  "sensing_askandwait": {
    "spec": "ask {QUESTION} and wait"
  },
  "sensing_answer": {
    "spec": "answer"
  },
  "sensing_keypressed": {
    "spec": "key {KEY_OPTION} pressed?"
  },
  "sensing_mousedown": {
    "spec": "mouse down?"
  },
  "sensing_mousex": {
    "spec": "mouse x"
  },
  "sensing_mousey": {
    "spec": "mouse y"
  },
  "sensing_setdragmode": {
    "spec": "set drag mode {DRAG_MODE}"
  },
  "sensing_loudness": {
    "spec": "loudness"
  },
  "sensing_timer": {
    "spec": "timer"
  },
  "sensing_resettimer": {
    "spec": "reset timer"
  },
  "sensing_of": {
    "spec": "{PROPERTY} of {OBJECT}"
  },
  "sensing_current": {
    "spec": "current {CURRENTMENU}"
  },
  "sensing_dayssince2000": {
    "spec": "days since 2000"
  },
  "sensing_username": {
    "spec": "username"
  },
  "operator_add": {
    "spec": "{NUM1} + {NUM2}"
  },
  "operator_subtract": {
    "spec": "{NUM1} - {NUM2}"
  },
  "operator_multiply": {
    "spec": "{NUM1} * {NUM2}"
  },
  "operator_divide": {
    "spec": "{NUM1} / {NUM2}"
  },
  "operator_random": {
    "spec": "pick random {FROM} to {TO}"
  },
  "operator_lt": {
    "spec": "{OPERAND1} < {OPERAND2}"
  },
  "operator_equals": {
    "spec": "{OPERAND1} = {OPERAND2}"
  },
  "operator_gt": {
    "spec": "{OPERAND1} > {OPERAND2}"
  },
  "operator_and": {
    "spec": "{OPERAND1} and {OPERAND2}"
  },
  "operator_or": {
    "spec": "{OPERAND1} or {OPERAND2}"
  },
  "operator_not": {
    "spec": "not {OPERAND}"
  },
  "operator_join": {
    "spec": "join {STRING1} {STRING2}"
  },
  "operator_letter_of": {
    "spec": "letter {LETTER} of {STRING}"
  },
  "operator_length": {
    "spec": "length of {STRING}"
  },
  "operator_contains": {
    "spec": "{STRING1} contains {STRING2} ?"
  },
  "operator_mod": {
    "spec": "{NUM1} mod {NUM2}"
  },
  "operator_round": {
    "spec": "round {NUM}"
  },
  "operator_mathop": {
    "spec": "{OPERATOR} of {NUM}"
  },
  "data_setvariableto": {
    "spec": "set {VARIABLE} to {VALUE}"
  },
  "data_changevariableby": {
    "spec": "change {VARIABLE} by {VALUE}"
  },
  "data_showvariable": {
    "spec": "show variable {VARIABLE}"
  },
  "data_hidevariable": {
    "spec": "hide variable {VARIABLE}"
  },
  "data_addtolist": {
    "spec": "add {ITEM} to {LIST}"
  },
  "data_deleteoflist": {
    "spec": "delete {INDEX} of {LIST}"
  },
  "data_deletealloflist": {
    "spec": "delete all of {LIST}"
  },
  "data_insertatlist": {
    "spec": "insert {ITEM} at {INDEX} of {LIST}"
  },
  "data_replaceitemoflist": {
    "spec": "replace item {INDEX} of {LIST} with {ITEM}"
  },
  "data_itemoflist": {
    "spec": "item {INDEX} of {LIST}"
  },
  "data_itemnumoflist": {
    "spec": "item # of {ITEM} in {LIST}"
  },
  "data_lengthoflist": {
    "spec": "length of {LIST}"
  },
  "data_listcontainsitem": {
    "spec": "{LIST} contains {ITEM} ?"
  },
  "data_showlist": {
    "spec": "show list {LIST}"
  },
  "data_hidelist": {
    "spec": "hide list {LIST}"
  },
  "procedures_definition": {
    "spec": "define {PROC}"
  },
  "pen_clear": {
    "spec": "erase all"
  },
  "pen_stamp": {
    "spec": "stamp"
  },
  "pen_penDown": {
    "spec": "pen down"
  },
  "pen_penUp": {
    "spec": "pen up"
  },
  "pen_setPenColorToColor": {
    "spec": "set pen color to {COLOR}"
  },
  "pen_changePenColorParamBy": {
    "spec": "change pen {COLOR_PARAM} by {VALUE}"
  },
  "pen_setPenColorParamTo": {
    "spec": "set pen {COLOR_PARAM} to {VALUE}"
  },
  "pen_changePenSizeBy": {
    "spec": "change pen size by {SIZE}"
  },
  "pen_setPenSizeTo": {
    "spec": "set pen size to {SIZE}"
  },
  "music_playDrumForBeats": {
    "spec": "play drum {DRUM} for {BEATS} beats"
  },
  "music_restForBeats": {
    "spec": "rest for {BEATS} beats"
  },
  "music_playNoteForBeats": {
    "spec": "play note {NOTE} for {BEATS} beats"
  },
  "music_setInstrument": {
    "spec": "set instrument to {INSTRUMENT}"
  },
  "music_setTempo": {
    "spec": "set tempo to {TEMPO}"
  },
  "music_changeTempo": {
    "spec": "change tempo by {TEMPO}"
  },
  "music_getTempo": {
    "spec": "tempo"
  },
  "videoSensing_whenMotionGreaterThan": {
    "spec": "when video motion > {REFERENCE}"
  },
  "videoSensing_videoOn": {
    "spec": "video {ATTRIBUTE} on {SUBJECT}"
  },
  "videoSensing_videoToggle": {
    "spec": "turn video {VIDEO_STATE}"
  },
  "videoSensing_setVideoTransparency": {
    "spec": "set video transparency to {TRANSPARENCY}"
  },
  "text2speech_speakAndWait": {
    "spec": "speak {WORDS}"
  },
  "text2speech_setVoice": {
    "spec": "set voice to {VOICE}"
  },
  "text2speech_setLanguage": {
    "spec": "set language to {LANGUAGE}"
  },
  "translate_getTranslate": {
    "spec": "translate {WORDS} to {LANGAUGE}"
  },
  "translate_getViewerLanguage": {
    "spec": "language"
  },
  "boost_motorOnFor": {
    "spec": "turn motor {MOTOR_ID} for {DURATION} seconds"
  },
  "boost_motorOnForRotation": {
    "spec": "turn motor {MOTOR_ID} for {ROTATION} rotations"
  },
  "boost_motorOn": {
    "spec": "turn motor {MOTOR_ID} on"
  },
  "boost_motorOff": {
    "spec": "turn motor {MOTOR_ID} off"
  },
  "boost_setMotorPower": {
    "spec": "set motor {MOTOR_ID} speed to {POWER} %"
  },
  "boost_setMotorDirection": {
    "spec": "set motor {MOTOR_ID} direction {MOTOR_DIRECTION}"
  },
  "boost_getMotorPosition": {
    "spec": "motor {MOTOR_REPORTER_ID} position"
  },
  "boost_whenColor": {
    "spec": "when {COLOR} brick seen"
  },
  "boost_seeingColor": {
    "spec": "seeing {COLOR} brick?"
  },
  "boost_whenTilted": {
    "spec": "when tilted {TILT_DIRECTION_ANY}"
  },
  "boost_getTiltAngle": {
    "spec": "tilt angle {TILT_DIRECTION}"
  },
  "boost_setLightHue": {
    "spec": "set light color to {HUE}"
  },
  "ev3_motorTurnClockwise": {
    "spec": "motor {PORT} turn this way for {TIME} seconds"
  },
  "ev3_motorTurnCounterClockwise": {
    "spec": "motor {PORT} turn that way for {TIME} seconds"
  },
  "ev3_motorSetPower": {
    "spec": "motor {PORT} set power {POWER} %"
  },
  "ev3_getMotorPosition": {
    "spec": "motor {PORT} position"
  },
  "ev3_whenButtonPressed": {
    "spec": "when button {PORT} pressed"
  },
  "ev3_whenDistanceLessThan": {
    "spec": "when distance < {DISTANCE}"
  },
  "ev3_whenBrightnessLessThan": {
    "spec": "when brightness < {DISTANCE}"
  },
  "ev3_buttonPressed": {
    "spec": "button {PORT} pressed?"
  },
  "ev3_getDistance": {
    "spec": "distance"
  },
  "ev3_getBrightness": {
    "spec": "brightness"
  },
  "ev3_beep": {
    "spec": "beep note {NOTE} for {TIME} secs"
  },
  "gdxfor_whenGesture": {
    "spec": "when {GESTURE}"
  },
  "gdxfor_whenForcePushedOrPulled": {
    "spec": "when force sensor {PUSH_PULL}"
  },
  "gdxfor_getForce": {
    "spec": "force"
  },
  "gdxfor_whenTilted": {
    "spec": "when tilted {TILT}"
  },
  "gdxfor_isTilted": {
    "spec": "tilted {TILT}?"
  },
  "gdxfor_getTilt": {
    "spec": "tilt angle {TILT}"
  },
  "gdxfor_isFreeFalling": {
    "spec": "falling?"
  },
  "gdxfor_getSpinSpeed": {
    "spec": "spin speed {DIRECTION}"
  },
  "gdxfor_getAcceleration": {
    "spec": "acceleration {DIRECTION}"
  },
  "makeymakey_whenMakeyKeyPressed": {
    "spec": "when {KEY} key pressed"
  },
  "makeymakey_whenCodePressed": {
    "spec": "when {SEQUENCE} pressed in order"
  },
  "microbit_whenButtonPressed": {
    "spec": "when {BTN} button pressed"
  },
  "microbit_isButtonPressed": {
    "spec": "{BTN} button pressed?"
  },
  "microbit_whenGesture": {
    "spec": "when {GESTURE}"
  },
  "microbit_displaySymbol": {
    "spec": "display {MATRIX}"
  },
  "microbit_displayText": {
    "spec": "display text {TEXT}"
  },
  "microbit_displayClear": {
    "spec": "clear display"
  },
  "microbit_whenTilted": {
    "spec": "when tilted {DIRECTION}"
  },
  "microbit_isTilted": {
    "spec": "tilted {DIRECTION}?"
  },
  "microbit_getTiltAngle": {
    "spec": "tilt angle {DIRECTION}"
  },
  "microbit_whenPinConnected": {
    "spec": "when pin {PIN} connected"
  },
  "wedo2_motorOnFor": {
    "spec": "turn {MOTOR_ID} on for {DURATION} seconds"
  },
  "wedo2_motorOn": {
    "spec": "turn {MOTOR_ID} on"
  },
  "wedo2_motorOff": {
    "spec": "turn {MOTOR_ID} off"
  },
  "wedo2_startMotorPower": {
    "spec": "set {MOTOR_ID} power to {POWER}"
  },
  "wedo2_setMotorDirection": {
    "spec": "set {MOTOR_ID} direction to {MOTOR_DIRECTION}"
  },
  "wedo2_setLightHue": {
    "spec": "set light color to {HUE}"
  },
  "wedo2_playNoteFor": {
    "spec": "play note {NOTE} for {DURATION} seconds"
  },
  "wedo2_whenDistance": {
    "spec": "<"
  },
  "wedo2_whenTilted": {
    "spec": "when tilted {TILT_DIRECTION_ANY}"
  },
  "wedo2_getDistance": {
    "spec": "distance"
  },
  "wedo2_isTilted": {
    "spec": "tilted {TILT_DIRECTION_ANY}?"
  },
  "wedo2_getTiltAngle": {
    "spec": "tilt angle {TILT_DIRECTION}"
  },
  "COLOR": {
    "spec": "color"
  },
  "FISHEYE": {
    "spec": "fisheye"
  },
  "WHIRL": {
    "spec": "whirl"
  },
  "PIXELATE": {
    "spec": "pixelate"
  },
  "MOSAIC": {
    "spec": "mosaic"
  },
  "BRIGHTNESS": {
    "spec": "brightness"
  },
  "GHOST": {
    "spec": "ghost"
  },
  "number": {
    "spec": "number"
  },
  "name": {
    "spec": "name"
  },
  "PITCH": {
    "spec": "pitch"
  },
  "PAN": {
    "spec": "pan"
  },
  "space": {
    "spec": "space"
  },
  "any": {
    "spec": "any"
  },
  "color": {
    "spec": "color"
  },
  "saturation": {
    "spec": "saturation"
  },
  "brightness": {
    "spec": "brightness"
  },
  "transparency": {
    "spec": "transparency"
  },
  "sq": {
    "spec": "Albanian"
  },
  "am": {
    "spec": "Amharic"
  },
  "ar": {
    "spec": "Arabic"
  },
  "hy": {
    "spec": "Armenian"
  },
  "az": {
    "spec": "Azerbaijani"
  },
  "eu": {
    "spec": "Basque"
  },
  "be": {
    "spec": "Belarusian"
  },
  "bg": {
    "spec": "Bulgarian"
  },
  "ca": {
    "spec": "Catalan"
  },
  "hr": {
    "spec": "Croatian"
  },
  "cs": {
    "spec": "Czech"
  },
  "da": {
    "spec": "Danish"
  },
  "nl": {
    "spec": "Dutch"
  },
  "en": {
    "spec": "English"
  },
  "eo": {
    "spec": "Esperanto"
  },
  "et": {
    "spec": "Estonian"
  },
  "fi": {
    "spec": "Finnish"
  },
  "fr": {
    "spec": "French"
  },
  "gl": {
    "spec": "Galician"
  },
  "de": {
    "spec": "German"
  },
  "el": {
    "spec": "Greek"
  },
  "ht": {
    "spec": "Haitian Creole"
  },
  "hi": {
    "spec": "Hindi"
  },
  "hu": {
    "spec": "Hungarian"
  },
  "is": {
    "spec": "Icelandic"
  },
  "id": {
    "spec": "Indonesian"
  },
  "ga": {
    "spec": "Irish"
  },
  "it": {
    "spec": "Italian"
  },
  "ja": {
    "spec": "Japanese"
  },
  "kn": {
    "spec": "Kannada"
  },
  "ko": {
    "spec": "Korean"
  },
  "ku": {
    "spec": "Kurdish (Kurmanji)"
  },
  "la": {
    "spec": "Latin"
  },
  "lv": {
    "spec": "Latvian"
  },
  "lt": {
    "spec": "Lithuanian"
  },
  "mk": {
    "spec": "Macedonian"
  },
  "ms": {
    "spec": "Malay"
  },
  "ml": {
    "spec": "Malayalam"
  },
  "mt": {
    "spec": "Maltese"
  },
  "mi": {
    "spec": "Maori"
  },
  "mr": {
    "spec": "Marathi"
  },
  "mn": {
    "spec": "Mongolian"
  },
  "my": {
    "spec": "Myanmar (Burmese)"
  },
  "fa": {
    "spec": "Persian"
  },
  "pl": {
    "spec": "Polish"
  },
  "pt": {
    "spec": "Portuguese (European)"
  },
  "ro": {
    "spec": "Romanian"
  },
  "ru": {
    "spec": "Russian"
  },
  "gd": {
    "spec": "Scots Gaelic"
  },
  "sr": {
    "spec": "Serbian"
  },
  "sk": {
    "spec": "Slovak"
  },
  "sl": {
    "spec": "Slovenian"
  },
  "es": {
    "spec": "Spanish (European)"
  },
  "sv": {
    "spec": "Swedish"
  },
  "te": {
    "spec": "Telugu"
  },
  "th": {
    "spec": "Thai"
  },
  "tr": {
    "spec": "Turkish"
  },
  "uk": {
    "spec": "Ukrainian"
  },
  "uz": {
    "spec": "Uzbek"
  },
  "vi": {
    "spec": "Vietnamese"
  },
  "cy": {
    "spec": "Welsh"
  },
  "zu": {
    "spec": "Zulu"
  },
  "he": {
    "spec": "Hebrew"
  },
  "nb": {
    "spec": "Norwegian"
  },
  "A": {
    "spec": "A"
  },
  "B": {
    "spec": "B"
  },
  "C": {
    "spec": "C"
  },
  "D": {
    "spec": "D"
  },
  "AB": {
    "spec": "AB"
  },
  "ALL": {
    "spec": "ABCD"
  },
  "red": {
    "spec": "red"
  },
  "blue": {
    "spec": "blue"
  },
  "green": {
    "spec": "green"
  },
  "yellow": {
    "spec": "yellow"
  },
  "white": {
    "spec": "white"
  },
  "black": {
    "spec": "black"
  },
  "up": {
    "spec": "up"
  },
  "down": {
    "spec": "down"
  },
  "left": {
    "spec": "left"
  },
  "right": {
    "spec": "right"
  },
  "0": {
    "spec": "0"
  },
  "1": {
    "spec": "1"
  },
  "2": {
    "spec": "2"
  },
  "3": {
    "spec": "(3) Organ"
  },
  "front": {
    "spec": "front"
  },
  "back": {
    "spec": "back"
  },
  "x": {
    "spec": "x"
  },
  "y": {
    "spec": "y"
  },
  "z": {
    "spec": "z"
  },
  "motor": {
    "spec": "motor"
  },
  "_mouse_": {
    "spec": "mouse-pointer"
  },
  "_random_": {
    "spec": "random position"
  },
  "forward": {
    "spec": "forward"
  },
  "backward": {
    "spec": "backward"
  },
  "LOUDNESS": {
    "spec": "loudness"
  },
  "TIMER": {
    "spec": "timer"
  },
  "all": {
    "spec": "all"
  },
  "_myself_": {
    "spec": "myself"
  },
  "_edge_": {
    "spec": "edge"
  },
  "draggable": {
    "spec": "draggable"
  },
  "_stage_": {
    "spec": "Stage"
  },
  "direction": {
    "spec": "direction"
  },
  "size": {
    "spec": "size"
  },
  "volume": {
    "spec": "volume"
  },
  "YEAR": {
    "spec": "year"
  },
  "MONTH": {
    "spec": "month"
  },
  "DATE": {
    "spec": "date"
  },
  "DAYOFWEEK": {
    "spec": "day of week"
  },
  "HOUR": {
    "spec": "hour"
  },
  "MINUTE": {
    "spec": "minute"
  },
  "SECOND": {
    "spec": "second"
  },
  "abs": {
    "spec": "abs"
  },
  "floor": {
    "spec": "floor"
  },
  "ceiling": {
    "spec": "ceiling"
  },
  "sqrt": {
    "spec": "sqrt"
  },
  "sin": {
    "spec": "sin"
  },
  "cos": {
    "spec": "cos"
  },
  "tan": {
    "spec": "tan"
  },
  "asin": {
    "spec": "asin"
  },
  "acos": {
    "spec": "acos"
  },
  "atan": {
    "spec": "atan"
  },
  "ln": {
    "spec": "ln"
  },
  "log": {
    "spec": "log"
  },
  "4": {
    "spec": "(4) Guitar"
  },
  "5": {
    "spec": "(5) Electric Guitar"
  },
  "6": {
    "spec": "(6) Bass"
  },
  "7": {
    "spec": "(7) Pizzicato"
  },
  "8": {
    "spec": "(8) Cello"
  },
  "9": {
    "spec": "(9) Trombone"
  },
  "10": {
    "spec": "(10) Clarinet"
  },
  "11": {
    "spec": "(11) Saxophone"
  },
  "12": {
    "spec": "(12) Flute"
  },
  "13": {
    "spec": "(13) Wooden Flute"
  },
  "14": {
    "spec": "(14) Bassoon"
  },
  "15": {
    "spec": "(15) Choir"
  },
  "16": {
    "spec": "(16) Vibraphone"
  },
  "17": {
    "spec": "(17) Music Box"
  },
  "18": {
    "spec": "(18) Steel Drum"
  },
  "19": {
    "spec": "(19) Marimba"
  },
  "20": {
    "spec": "(20) Synth Lead"
  },
  "21": {
    "spec": "(21) Synth Pad"
  },
  "motion": {
    "spec": "motion"
  },
  "Stage": {
    "spec": "stage"
  },
  "off": {
    "spec": "off"
  },
  "on": {
    "spec": "on"
  },
  "ALTO": {
    "spec": "alto"
  },
  "TENOR": {
    "spec": "tenor"
  },
  "SQUEAK": {
    "spec": "squeak"
  },
  "GIANT": {
    "spec": "giant"
  },
  "KITTEN": {
    "spec": "kitten"
  },
  "reverse": {
    "spec": "reverse"
  },
  "shaken": {
    "spec": "shaken"
  },
  "pushed": {
    "spec": "pushed"
  },
  "pulled": {
    "spec": "pulled"
  },
  "SPACE": {
    "spec": "space"
  },
  "UP": {
    "spec": "up arrow"
  },
  "DOWN": {
    "spec": "down arrow"
  },
  "RIGHT": {
    "spec": "right arrow"
  },
  "LEFT": {
    "spec": "left arrow"
  },
  "w": {
    "spec": "w"
  },
  "a": {
    "spec": "a"
  },
  "s": {
    "spec": "s"
  },
  "d": {
    "spec": "d"
  },
  "f": {
    "spec": "f"
  },
  "g": {
    "spec": "g"
  },
  "moved": {
    "spec": "moved"
  },
  "jumped": {
    "spec": "jumped"
  }
}
